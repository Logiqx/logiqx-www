<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<style TYPE="text/css">
<!--
H1 { font-size: 1.5pc }
H2 { font-size: 1pc }
-->
</style>
<title>WinKawaks Dat</title>
</head>

<body bgcolor="#FFFFFF">

<p align="center"><!--#include virtual="/ads/top.shtml" --> </p>

<hr>

<p align="center"><img border="0" src="WinKawaksDat.gif" width="189" height="40"></p>

<h1>Overview</h1>

<p>Although WinKawaks is capable of creating a RomCenter data file itself the <a href="http://caesar.logiqx.com/">CAESAR</a>
database needs it to be in CMPro format (for year and manufacturer information).
Although it seems a lot of effort to have created a data file from scratch it
does have the benefit of that it
can be compared against the one generated by Kawaks (for identification of
mistakes in Kawaks itself).
</p>

<hr>

<h1>Initial Creation (won't need to be done again)</h1>

<h2>Quick Creation</h2>

<p>As a first stab at creating the WinKawaks data file I created a list of game names then
extracted their details from the MAME data file. The way I did this for WinKawaks was to
create a DatUtil 'titlelist' from the initial RomCenter data file using 'datutilx -f
titlelist'. Once I had the titlelist I then used 'vi' (the best text editor
ever) to convert each line to a 'datutilx -g' command and saved the resulting
commands as a '.bat' file. It looked something like this:</p>
<p>datutilx -g sfa -f listinfo -a new.dat mame.dat<br>
etc.</p>
<p>How did I do this in vi? It took no more than thirty seconds to type:</p>
<p>1) :%s/^ *//<br>
2) :%s/ .*//<br>
3) :%s/^/datutilx -g /<br>
4) :%s/$/ -f listinfo -a new.dat mame.dat/</p>
<p>Note: this could also be done using the Unix command 'sed' (I use CygWin for
Unix commands on the PC) . If I used Microsoft's notepad then it would have
taken lots of copying and pasting! </p>
<p>After running this script I had a file called new.dat containing all the games as extracted
from a MAME data file. This was about 95% of the way to a finished WinKawaks dat!</p>
<h2>Checking the Data File Contents</h2>
<p>To check for games that weren't extracted from MAME (i.e. recently decrypted
CPS-2 games) and check for other discrepancies between my data file and the original
RomCenter one I used the comparison feature of DatUtil (i.e. 'datutilx new.dat WinKawaks.dat').</p>
<p>What this revealed was that the RomCenter WinKawaks data file didn't contain all of
the 'merge' information required (for data file completeness). To ignore the 900 odd instances
reported, I used 'grep -v merge datutil.log' to just show genuine differences
between the two data files ('grep' is another Unix command). This showed a few games
were missing in my data file (newly decrypted
games) so I added these in by copying/pasting from the CPS-2 data file and it also
showed a few
ROM errors in WinKawaks itself (which I reported to Raz and they have now been
corrected by the WinKawaks author). </p>
<p>After the changes, the only differences between the two data files was the missing
'merge' information in the original RomCenter data file. </p>
<h2>Loading into CMPro</h2>
<p>Loading a data file into CMPro is an important check because CMPro will report
missing parents. In the case of CPS-2 games several clones are emulated where
the parent is not, so you therefore need to add the parents into the data file so that
standard merging/splitting is possible. Note that the RomCenter data file generated by
WinKawaks now includes these games too.</p>
<p>The way that I added the un-emulated parents to the data file was by having two files;
one containing the emulated games (the new.dat that I created earlier) and the other containing the un-emulated
parents. While loading the emulated games data file into CMPro I created a 'parents.dat' dat,
adding the missing parents as they were reported (copying/pasting from the CPS-2 data
file). After this I then combined
the two data files (emulated games and extra parents) into a single data file using a simple
.bat script. The resultant data file was what went out to the public but the emulated
games data file was used by CAESAR.</p>
<h2>Building ROMs and Testing from WinKawaks</h2>
<p>Once the data file was loaded into CMPro I built a split set (from scratch) using
the rebuilder option of CMPro. I then loaded WinKawaks and used it's ROM audit
facility to ensure the set was 100% correct. Split sets are in my opinion the
best type to have and they are also the most useful when testing the correctness
of a data file. If your data file contains subtle errors then they may not show up when
using fully merged ROMs. However, they will almost certainly show up when using
a split set.</p>
<h2>RomCenter Data File Generation</h2>
<p>Once happy that the CMPro data file was correct, a RomCenter version was created
using DatUtil and both data files released to the public.</p>
<hr>
<h1>
Data File Updates</h1>
<h2>Identifying Necessary Changes</h2>
<p>Thankfully the RomCenter data file generation of WinKawaks makes life pretty easy when doing
updates.</p>
<p>All that needs to be done is a comparison made between the last public data file and
the RomCenter data file generated by the new WinKawaks. Any differences reported need to be rectified by copy and
pasting details from the MAME or CPS-2 data files. The data file can then loaded into CMPro
and your ROM set updated accordingly. After updating your ROMs, if the WinKawaks internal audit
reports all is well then the CMPro data file can be run through DatUtil to create a RomCenter
data file. </p>
<hr>
<h1>Final Notes</h1>
<p>There are two definite benefits to maintaining my own data file for WinKawaks:</p>
<p>1) CAESAR gets it's year and manufacturer information.<br>
2) CRC and size errors in WinKawaks are spotted and can be reported to the
author.</p>

</body>
</html>