<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<title>Compiling WinMAME</title>
<style TYPE="text/css">
<!--
H1 { font-size: 1pc }
-->
</style>
</head>

<body>

<p align="center"><!--#include virtual="/ads/top.shtml" --> </p>

<hr>

<p align="center"><img border="0" src="Compiling.gif" width="317" height="40"></p>

<p align="center">21st June 2003</p>

<p align="center">Tested with MAME v0.68 and RAINE32 v0.37.0</p>

<h1>1. Introduction</h1>

<p>This guide describes how to set up a MinGW environment that is suitable for compiling
MAME and RAINE32. It is written in the same style as the document I wrote explaining how
to create a DJGPP environment suitable for MAME and RAINE32. With the help of this guide any
proficient PC user should be able to set up MinGW for MAME and RAINE32 in around
15 to 20 minutes (assuming the required files are downloaded beforehand). The guide has been
written with the intention that the user will gain an understanding of what they are doing
rather than just downloading a ready prepared distribution. It will not tell you how to do
basic tasks such as <em>creating</em> a directory or <em>extracting</em> files from a ZIP,
it will tell you <em>where</em> to create a directory or <em>where </em>to extract a ZIP.
So long as you have those basic skills then you should have no problems.</p>

<p>The guide will explain how to install MinGW onto the D: drive but you can choose any
drive and location that you wish (so long as you think about what you are doing!).</p>

<hr>

<h1>2. Installing the Compiler</h1>

<p><a href="http://sourceforge.net/projects/mingw">MinGW</a> comes as an executable that
does the entire installation:</p>

<table border="1" width="100%">
<TBODY>
  <tr>
    <td width="250">File</td>
    <td>Description</td>
  </tr>
  <tr>
    <td><a href="http://caesar.logiqx.com/zips/tools/compilers/mingw/MinGW-2.0.0-3.exe">MinGW-2.0.0-3.exe</a></td>
    <td>MinGW 2.0.0</td>
  </tr>
  <tr>
    <td><a href="http://caesar.logiqx.com/zips/tools/compilers/mingw/make-3.79.1-20010722.tar.gz">
    make-3.79.1-20010722.tar.gz</a></td>
    <td>GNU Make 3.79.1 for MinGW</td>
  </tr>
</TBODY>
</table>

<p>To install MinGW: 

<ol>
  <li>Run <em>MinGW-2.0.0-3.exe</em></li>
  <li>When prompted for a directory to install MinGW into, specify <em>D:\MINGW</em> </li>
  <li>Open <i>make-3.79.1-20010722.tar.gz</i> using WinZip and extract <em>
  MAKE.EXE</em> into <em>D:\MINGW\BIN</em>.</li>
  <li>When the installation is done, configure your path variable. The procedure 
  varies slightly according to your OS: </li>
</ol>

<p><u> Windows 95/98/ME:</u></p>
<p>Add the following three lines to <em>C:\AUTOEXEC.BAT</em></p>

<p><font face="Courier New">SET MINGDIR=D:\MINGW<br>
SET UNIX_TOOLS=1<br>
SET PATH=%PATH%;D:\MINGW\BIN</font></p>

<p>Note: MAME and RAINE32 need some additional libraries installing but before you do anything
else <strong>restart your PC</strong> so that the changes in AUTOEXEC.BAT become active.
More experienced users will know how to avoid having to do a reboot but if you don't know
a way then just reboot!</p>

<p><u>Windows NT/2000/XP:</u></p>

<p>Each OS is slightly different but they are almost identical... </p>
<ul>
  <li>From the Start Menu, select 'Settings-&gt;Control Panel' (just 'Control 
  Panel' on Windows XP).</li>
  <li>Double-click the 'System' icon (under 'Performance and Maintenance' on 
  Windows XP).</li>
</ul>
<ul>
  <li>Select the 'Advanced' sheet (on Windows 2000, called 'Environment' on NT).</li>
  <li>Click on 'Environment Variables...'.</li>
</ul>
<ul>
  <li>Click on 'New...' (under the 'System variables' section).</li>
  <li>Specify a variable name of 'MINGDIR' and value of 'd:\mingw' 
  (change the 'd:' as appropriate, if you are using a different disk!). <br>
&nbsp;</li>
  <li>Click on 'New...' (under the 'System variables' section).</li>
  <li>Specify a variable name of 'UNIX_TOOLS' and value of '1'.<br>
&nbsp;</li>
  <li>Select 'Path' (under the 'System variables' section). </li>
  <li>Click 'Edit...'. </li>
  <li>Add ';d:\mingw\bin' at the end of the value line and press 'OK'. </li>
</ul>

<p>Note: On NT/2000/XP there is no need for a reboot (if you followed my steps 
above).</p>

<p><u>Supporting commands</u></p>

<p>You will also need a few <a
href="ftp://ftp.franken.de/pub/win32/develop/gnuwin32/mingw32/porters/Mikey/">
supporting commands</a> in order to compile MAME and RAINE32:</p>

<table border="1" width="100%">
<TBODY>
  <tr>
    <td width="150">File</td>
    <td>Description</td>
  </tr>
  <tr>
    <td><a href="http://caesar.logiqx.com/zips/tools/compilers/mingw/misc-utils.zip">
    misc-utils.zip</a></td>
    <td>MinGW ports of cat, cp, echo, mkdir, patch (actually the DJGPP one), rm, 
    sh, sort</td>
  </tr>
</TBODY>
</table>

<p>To install these commands: 

<ol>
  <li>Open <i>misc-utils.zip</i> using WinZip and extract everything into a 
  directory that is in your path (e.g. <em>C:\WINDOWS\COMMAND</em> or <em>D:\MINGW\BIN</em>)
  </li>
</ol>

<hr>

<h1>3. A potential problem - PATH conflicts!</h1>

<p>You may find that other directories in your PATH contain commands that
conflict with MinGW (e.g. different versions of make, gcc, C libraries, etc).</p>

<p>If you are suffering unexplained compilation errors then you probably need to
reset your PATH variable within the command prompt that you are compiling from.
You can choose one of two options:</p>

<ul>
  <li><font face="Courier New">SET PATH=D:\MINGW\BIN;%PATH%</font></li>
  <li><font face="Courier New">SET PATH=D:\MINGW\BIN</font></li>
</ul>
<p>Obviously, you can put this command into a little .BAT script if you wish
(for ease of use).</p>

<hr>

<h1>4. Installing DirectX 7.0 Headers</h1>

<p>Although RAINE32 uses Allegro (not DirectX directly), Allegro needs the DirectX 
7.0 headers when it is compiled.</p>

<table border="1" width="100%">
<TBODY>
  <tr>
    <td width="150">File</td>
    <td>Description</td>
  </tr>
  <tr>
    <td><a href="http://caesar.logiqx.com/zips/tools/compilers/mingw/dx70_mgw.zip">
    dx70_mgw.zip</a></td>
    <td>DirectX 7.0 libraries and headers</td>
  </tr>
</TBODY>
</table>

<p>To install the DirectX  7.0 headers: 

<ol>
  <li>Open<i> dx70_mgw.zip </i>with WinZip and extract the 38 'include' files into <em>
  D:\MINGW\INCLUDE</em></li>
</ol>

<hr>

<h1>5. Installing Allegro (only needed for RAINE32)</h1>

<p><a href="http://www.talula.demon.co.uk/allegro/">Allegro</a> (A Low Level Game Routines
Library) is used by RAINE32 for graphics handling, sound and input handling. RAINE32
uses a statically linked version of the library as this avoids a
problem that was encountered with the dynamic version (DLL version). You need the following
archives:</p>

<table border="1" width="100%">
  <tr>
    <td width="150">File</td>
    <td>Description</td>
  </tr>
  <tr>
    <td>
    <a href="http://caesar.logiqx.com/zips/tools/gfx_libs/allegro/all403b1.zip">
    all403b1.zip</a></td>
    <td>Source code for Allegro 4.0.3 beta 1</td>
  </tr>
  <tr>
    <td>
    <a href="http://caesar.logiqx.com/zips/tools/gfx_libs/allegro/all403b1-mingw.zip">
    all403b1-mingw.zip</a></td>
    <td>Pre-compiled version of Allegro 4.0.3 beta 1, including RAINE triple 
    buffer hack - for lazy people!</td>
  </tr>
  <tr>
    <td><a href="http://caesar.logiqx.com/zips/tools/gfx_libs/allegro/ahack400.zip">ahack400.zip</a></td>
    <td>RAINE triple buffer hack for Allegro 4.0.0 (fine for 4.0.3 beta 1)</td>
  </tr>
</table>

<p><u>To compile Allegro from the source:</u>

<p>Firstly, if you didn't install the DirectX 7.0  headers then do it now because DirectX 6.1 
headers will not work!<ol>
  <li>Extract <em>all403b1.zip</em> to <em>D:\</em> (a directory called <em>ALLEGRO</em> will
    be created automatically).</li>
  <li>Extract <i>ahack400.zip </i>to <i>D:\ALLEGRO</i>.</li>
  <li>Open a DOS window and change directory to <em>D:\ALLEGRO</em></li>
  <li>Apply the RAINE triple buffer hack: type 'patch -p1 &lt;raine_allegro_hacks-u.diff'
    and press return.</li>
  <li>Type 'fix mingw32' and press return.</li>
  <li>Type 'make lib'<em> </em>and press return. Your computer will take  a while to
    compile Allegro so  get a drink or something.</li>
</ol>

<p>Note: Attempts to compile the library will be unsuccessful if you did not set 
UNIX_TOOLS to 1 as described earlier!</p>

<p>After compiling Allegro, install it as follows (from the DOS window that you
compiled under) : 

<ol>
  <li>Type 'make install'. This will install the relevant Allegro files into you
    MinGW directory.</li>
</ol>

<p>Note: Attempts to install the library will be unsuccessful if you did not set 
MINGDIR as described earlier!</p>

<p>Tip: You can create your Allegro directory anywhere that you wish (I only
used the D: 
drive for simplicity). You will also notice that the first make 
command was 'make lib'. If you wish to do a full Allegro build (which includes
example programs and is about 40MB bigger than the library alone) you can use 'make' 
instead of 'make lib'. However, only the library is required
to compile RAINE32  so it is fairly useless doing a full build just for RAINE32.</p>

<p><u>To install Allegro using the pre-compiled version (to avoid compiling it):</u> 

<ol>
  <li>Extract <em>all403b1-mingw.zip</em> into <em>D:\MINGW</em> (using WinZip or similar).</li>
</ol>

<p>Allegro is now installed for MinGW.</p>

<hr>

<h1>6. Installing EXEDAT (only needed for RAINE32)</h1>

<p>EXEDAT is used to append RAINE.dat onto RAINE.EXE. It is
part of Allegro so you don't need to download anything extra (unless you want to
avoid compiling it, in which case see below).</p>

<p>Compile EXEDAT as follows: 

<ol>
  <li>Open a DOS window and change to the Allegro directory (if you are not
    already in it)<em>.</em></li>
  <li>Type 'make exedat'<em> </em>and press return. This will now create <em>exedat.exe</em>
    in the <em>tools</em> directory of Allegro.</li>
  <li>Copy <em>exedat.exe</em> into a directory
    that is in your PATH (e.g. <em>C:\WINDOWS\COMMAND</em> or <em>D:\MINGW\BIN</em>).</li>
</ol>

<p>EXEDAT is now installed.</p>

<p>Note: Attempts to compile EXEDAT will be unsuccessful if you did not set 
UNIX_TOOLS=1 as described earlier!</p>

<p><u>To install EXEDAT using a pre-compiled version (to avoid compiling it):</u> 

<ol>
  <li>Extract <em><a href="http://caesar.logiqx.com/zips/tools/gfx_libs/allegro/exedat-mingw.zip">exedat-mingw.zip</a></em> into a directory
    that is in your PATH (e.g. <em>C:\WINDOWS\COMMAND</em> or <em>D:\MINGW\BIN</em>).</li>
</ol>

<p>EXEDAT is now installed.</p>

<p>Note: Old versions of RAINE32 required EXEDAT to be in the relative directory '<i>../allegro/tools</i>'
(from the RAINE32 source) but this is now unneccessary.</p>

<hr>

<h1>7. Installing NASM</h1>

<p><a href="http://sourceforge.net/projects/nasm/">NASM</a> (Netwide Assembler) is used by
MAME and RAINE32 as an x86 assembler. You require the following archive:</p>

<table border="1" width="100%">
<TBODY>
  <tr>
    <td width="150">File</td>
    <td>Description</td>
  </tr>
  <tr>
    <td>
    <a href="http://caesar.logiqx.com/zips/tools/assemblers/nasm/nasm-0.98.35-win32.zip">
    nasm-0.98.35-win32.zip</a></td>
    <td>NASM 0.98.35 for Win32</td>
  </tr>
</TBODY>
</table>

<p>To install NASM: 

<ol>
  <li>Open <em>nasm-0.98.35-win32.zip</em> using WinZip then extract <em>NASMW.EXE</em> 
    and <i>NDISASMW.EXE</i> into a directory
    that is in your PATH (e.g. <em>C:\WINDOWS\COMMAND</em> or <em>D:\MINGW\BIN</em>).</li>
</ol>

<p>NASM is now installed.</p>

<hr>

<h1>8. Installing zlib</h1>

<p><a href="http://www.gzip.org/zlib/">zlib</a> (ZIP library) is used by MAME and RAINE32 for loading zipped ROMs. You will require the following archive:</p>

<table border="1" width="100%">
<TBODY>
  <tr>
    <td width="150">File</td>
    <td>Description</td>
  </tr>
  <tr>
    <td><a href="http://caesar.logiqx.com/zips/tools/zip_libs/zlib/zlib114.zip">zlib114.zip</a></td>
    <td>Source code for zlib 1.1.4</td>
  </tr>
  <tr>
    <td><a href="http://caesar.logiqx.com/zips/tools/zip_libs/zlib/zlib114-mingw.zip">zlib114-mingw.zip</a></td>
    <td>Pre-compiled version of zlib 1.1.4 - for lazy people!</td>
  </tr>
</TBODY>
</table>

<p><u>To compile zlib from the source:</u> 

<ol>
  <li>Create a directory called <em>D:\ZLIB</em> and extract <em>zlib114.zip</em> into it
    using WinZip (or similar). </li>
  <li>Open a DOS window and change directory to <em>D:\ZLIB</em> </li>
  <li>Type 'make -f nt/makefile.gcc' and press return. This shouldn't take too long to run. </li>
</ol>

<p>After compiling zlib, install it for MinGW as follows: 

<ol>
  <li>Copy <em>LIBZ.A to D:\MINGW\LIB</em> </li>
  <li>Copy <em>ZLIB.H to D:\MINGW\INCLUDE</em> </li>
  <li>Copy <em>ZCONF.H to D:\MINGW\INCLUDE</em> </li>
</ol>

<p>Once you have installed the required files you can delete <em>D:\ZLIB </em>if you wish.
Programmers may wish to keep it for reference purposes but other than that you won't need
it any longer.</p>

<p>Tip: As with Allegro it is not necessary that you use the D: drive for compiling zlib,
it can be done anywhere on your machine.</p>

<p><u>To install zlib using the pre-compiled version (to avoid compiling it):</u> 

<ol>
  <li>Extract <em>zlib114-mingw.zip </em>into <em>D:\MINGW</em> using WinZip (or similar).</li>
</ol>

<p>zlib is now installed for MinGW.</p>

<hr>

<h1>9. Installing SEAL (only needed for RAINE32)</h1>
<p>SEAL (Synthetic Audio Library) is
used by RAINE32 for sound. You will need the following archive(s):</p>
<table border="1" width="100%">
  <tr>
    <td width="150">File</td>
    <td>Description</td>
  </tr>
  <tr>
    <td><a href="http://caesar.logiqx.com/zips/tools/snd_libs/seal/raineseal107src.zip">raineseal107src.zip</a></td>
    <td>Source for SEAL 1.07 (updated for MinGW, also fixes SoundBlaster PCI128
      and 16-bit problems)</td>
  </tr>
  <tr>
    <td><a href="http://caesar.logiqx.com/zips/tools/snd_libs/seal/raineseal107.zip">raineseal107.zip</a></td>
    <td>Pre-compiled version of SEAL 1.07 for RAINE32 - for lazy people!</td>
  </tr>
</table>
<p><u>To compile SEAL 1.07 from the source:</u>
<ol>
  <li>Extract <em>seal107.zip</em> to <em>D:\</em> (a directory called <em>SEAL-1.07</em>
    will be created automatically).</li>
  <li>Open a DOS window and change directory to <em>D:\SEAL-1.07\SRC</em></li>
  <li>Type 'make mingw32'<em> </em>and press return.</li>
</ol>
<p>After compiling SEAL, install it for MinGW as follows:
<ol>
  <li>Copy <em>LIB\WIN32\LIBAUDIO.A to D:\MINGW\LIB</em></li>
  <li>Copy <em>SRC\AUDIO.H to D:\MINGW\INCLUDE</em></li>
</ol>
<p>SEAL is now installed for MinGW.</p>
<p><u>To install SEAL using the pre-compiled version (to avoid compiling it):</u>
<ol>
  <li>Extract <em>raineseal107.zip </em>into <em>D:\MINGW</em> using WinZip (or
    similar).</li>
</ol>
<p>SEAL is now installed for MinGW.</p>
<hr>

<h1>10. Installing UPX (only needed for RAINE32)</h1>

<p><a href="http://upx.sourceforge.net/">UPX</a> (Ultimate Packer for
eXecutables) is used to reduce the size of the RAINE32 executable. You will
need the following archive:</p>

<table border="1" width="100%">
<TBODY>
  <tr>
    <td width="150">File</td>
    <td>Description</td>
  </tr>
  <tr>
    <td><a href="http://caesar.logiqx.com/zips/tools/compilers/mingw/upx124w.zip">upx124w.zip</a></td>
    <td>UPX 1.24 for Win32</td>
  </tr>
</TBODY>
</table>

<p>To install UPX: 

<ol>
  <li>Open the archive using WinZip and extract <em>UPX.EXE</em> into a directory that is in
    your PATH (e.g. <em>C:\WINDOWS\COMMAND</em> or <em>D:\MINGW\BIN</em>). </li>
</ol>

<p>UPX is now installed and you can use it to compress any .EXE file that you wish (not
just MAME and RAINE32).</p>

<hr>

<h1>11. Compiling MAME</h1>

<p>The MAME source comes as a ZIP inside a ZIP to gain the greatest compression possible.
To compile MAME follow these steps: 

<ol>
  <li>Create a directory called <em>D:\MAME</em> and extract the MAME source into it. </li>
  <li>Open a DOS window and change directory to <em>D:\MAME</em> </li>
  <li>Type 'make' and press return. </li>
</ol>

<p>A reasonable computer will take about 20 minutes to compile MAME but a
low-spec machine could take some time!</p>

<p>Note: Remember that MAME requires the headers for DirectX v6.1
(NOT DirectX 7.0).</p>

<hr>

<h1>12. Compiling RAINE32</h1>

<p>To compile RAINE32 follow these steps: 

<ol>
  <li>Create a directory called <em>D:\RAINE</em> and extract the RAINE source into it
    (acquiring the source is described in <a href="Downloading.shtml">this document</a>).</li>
  <li>Ensure that you have an
  <a href="http://caesar.logiqx.com/zips/emus/multi/raine/raineicons.zip">icon</a> 
  called <i>RAINE.ICO</i>  in <i>D:\RAINE</i></li>
  <li>Open a DOS window and change directory to <em>D:\RAINE</em></li>
  <li>Type 'make' and press return.</li>
  <li>Type 'make compress' to attach <em>RAINE.DAT</em> and run UPX.</li>
</ol>

<p>A reasonable computer will take under 10 minutes to compile RAINE32 and
compress it.</p>

<p>Note 1: Attempts to compile RAINE will be unsuccessful if you did not set 
MINGDIR as described earlier!</p>
<p>Note 2: It is currently not possible to build a version of RAINE32 that is
statically linked with Allegro and SEAL at the same time.</p>
</body>
</html>