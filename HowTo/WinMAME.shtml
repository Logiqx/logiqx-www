<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<title>Compiling WinMAME</title>
<style TYPE="text/css">
<!--
H1 { font-size: 1pc }
-->
</style>
</head>

<body>

<p align="center"><!--#include virtual="/ads/top.shtml" --> </p>

<hr>

<p align="center"><img border="0" src="Compiling.gif" width="317" height="40"></p>

<p align="center">13th February 2005</p>

<p align="center">Tested with MAME v0.92 (I need to re-test with RAINE32)</p>

<h1>1. Introduction</h1>

<p>This guide describes how to set up a MinGW environment that is suitable for compiling
MAME and RAINE32. It is written in the same style as the document I wrote explaining how
to create a DJGPP environment suitable for MAME and RAINE32. With the help of this guide any
proficient PC user should be able to set up MinGW for MAME and RAINE32 in around
15 to 20 minutes (assuming the required files are downloaded beforehand). The guide has been
written with the intention that the user will gain an understanding of what they are doing
rather than just downloading a ready prepared distribution. It will not tell you how to do
basic tasks such as <em>creating</em> a directory or <em>extracting</em> files from a ZIP,
it will tell you <em>where</em> to create a directory or <em>where </em>to extract a ZIP.
So long as you have those basic skills then you should have no problems.</p>

<p>One of the big advantages of explaining things in this manner is that you can
update your own environment to use newer versions of the tools as they come out,
without being dependant on someone else doing it for you.</p>

<p>The guide will explain how to install MinGW onto the D: drive but you can choose any
drive and location that you wish (so long as you think about what you are doing!).</p>

<hr>

<h1>2. Installing the Compiler</h1>

<p><a href="http://sourceforge.net/projects/mingw" target="_blank">MinGW</a> comes as separate
downloadable components so you will need the following to compile MAME and RAINE32:</p>

<table border="1" width="100%">
<TBODY>
  <tr>
    <td width="250" bgcolor="#CCFFCC">File</td>
    <td bgcolor="#CCFFCC">Description</td>
  </tr>
  <tr>
    <td bgcolor="#CCFFCC"><a href="http://caesar.logiqx.com/zips/tools/compilers/mingw/gcc-core-3.4.2-20040916-1.tar.gz">gcc-core-3.4.2-20040916-1.tar.gz</a></td>
    <td bgcolor="#CCFFCC">GCC 3.4.2 (GNU C Compiler).
    </td>
  </tr>
  <tr>
    <td bgcolor="#CCFFCC"><a href="http://caesar.logiqx.com/zips/tools/compilers/mingw/binutils-2.15.91-20040904-1.tar.gz">binutils-2.15.91-20040904-1.tar.gz</a></td>
    <td bgcolor="#CCFFCC"> Binutils 2.15.91 (binary and object handling)</td>
  </tr>
  <tr>
    <td bgcolor="#CCFFCC"><a href="http://caesar.logiqx.com/zips/tools/compilers/mingw/mingw-runtime-3.7.tar.gz">mingw-runtime-3.7.tar.gz</a></td>
    <td bgcolor="#CCFFCC">MinGW Runtime 3.7 (stdio etc)</td>
  </tr>
  <tr>
    <td bgcolor="#CCFFCC"><a href="http://caesar.logiqx.com/zips/tools/compilers/mingw/w32api-3.2.tar.gz">w32api-3.2.tar.gz</a></td>
    <td bgcolor="#CCFFCC">Windows API 3.2 (needed during linking)</td>
  </tr>
  <tr>
    <td bgcolor="#CCFFCC"><a href="http://caesar.logiqx.com/zips/tools/compilers/mingw/mingw32-make-3.80.0-3.exe">mingw32-make-3.80.0-3.exe</a></td>
    <td bgcolor="#CCFFCC">MinGW Make 3.80.0-3
      <p>Note: This tool is now called mingw32-make.exe rather than make.exe (as
      you may be used to). This means that any time you need to run the 'make' command, you
      must run 'mingw32-make' instead.
    </td>
  </tr>
</TBODY>
</table>

<p>Note that the above files have the extension '.tar.gz'. This format originates from the
Unix community and the files are actually created using two tools ('tar' creates a single
archive of all the files and 'gzip' is used to compress the tar file). However, recent
versions of WinZip support this compression format so you don't need any additional tools.</p>

<p>To install MinGW: 

<ol>
  <li>Create a directory called <em>D:\MINGW</em> </li>
  <li>Unzip the binutils, gcc, mingw-runtime and w32api archives into <em>D:\MINGW </em>(using WinZip or similar). Ensure that
    you unzip the files in order that they are listed in this guide. This
    is important because some files exist in more than one archive (notably GCC
    and binutils) and you should use the latest
    version (i.e. say 'yes' to overwrite prompts).</li>
  <li>Run <i>mingw32-make-3.80.0-3.exe</i> (which is an installer) and choose <em>D:\MINGW</em>
    as the location.</li>
  <li>When the steps above have been completed, configure your path variable. The procedure 
  varies slightly according to your OS: </li>
</ol>

<p><u> Windows 95/98/ME:</u></p>
<p>Add the following two lines to <em>C:\AUTOEXEC.BAT</em></p>

<p><font face="Courier New">SET MINGDIR=D:\MINGW<br>
SET PATH=%PATH%;%MINGDIR%\BIN</font></p>

<p>Note: MAME and RAINE32 need some additional libraries installing but before you do anything
else <strong>restart your PC</strong> so that the changes in AUTOEXEC.BAT become active.
More experienced users will know how to avoid having to do a reboot but if you don't know
a way then just reboot!</p>

<p><u>Windows NT/2000/XP:</u></p>

<p>Each OS is slightly different but they are almost identical... </p>
<ul>
  <li>From the Start Menu, select 'Settings-&gt;Control Panel' (just 'Control 
  Panel' on Windows XP).</li>
  <li>Double-click the 'System' icon (under 'Performance and Maintenance' on 
  Windows XP).</li>
</ul>
<ul>
  <li>Select the 'Advanced' sheet (on Windows 2000, called 'Environment' on NT).</li>
  <li>Click on 'Environment Variables...'.</li>
</ul>
<ul>
  <li>Click on 'New...' (under the 'System variables' section).</li>
  <li>Specify a variable name of 'MINGDIR' and value of 'd:\mingw' 
  (change the 'd:' as appropriate, if you are using a different disk!). <br>
&nbsp;</li>
  <li>Select 'Path' (under the 'System variables' section). </li>
  <li>Click 'Edit...'. </li>
  <li>Add ';<font face="Courier New">%MINGDIR%</font>\bin' at the end of the value line and press 'OK'. </li>
</ul>

<p>Note: On NT/2000/XP there is no need for a reboot (if you followed my steps 
above). These changes will affect all new command prompts that you start (close
any that you may already have open).</p>

<p><u>Supporting commands</u></p>

<p>You will also need a few <a href="http://gnuwin32.sourceforge.net/" target="_blank">GNU
tools</a> in order to compile MAME and RAINE32:</p>

<table border="1" width="100%">
<TBODY>
  <tr>
    <td width="150" bgcolor="#CCFFCC">File</td>
    <td bgcolor="#CCFFCC">Description</td>
  </tr>
  <tr>
    <td bgcolor="#CCFFCC"><a href="http://caesar.logiqx.com/zips/tools/compilers/mingw/gnu-tools.zip">gnu-tools.zip</a></td>
    <td bgcolor="#CCFFCC">Win32 ports of cat, cp, echo, mkdir, patch, rm, sh.
      <p>Note: The DLLs that are required by these commands are also included.</p>
    </td>
  </tr>
</TBODY>
</table>

<p>To install these commands: 

<ol>
  <li>Open <i>gnu-utils.zip</i> using WinZip and extract everything into a 
  directory that is in your path (e.g. <em>C:\WINDOWS\COMMAND</em> or <em>D:\MINGW\BIN</em>).
    Note that the tools within the <i>gnu-utils.zip</i> are inside a 'bin'
    directory so be sure that they end up in the directory that you intend them
    to and that you do not create an extra 'bin' directory.
  </li>
</ol>

<hr>

<h1>3. A potential problem - PATH conflicts!</h1>

<p>You may find that other directories in your PATH contain commands that
conflict with MinGW. This used to happen in particular with the 'make' command
but since the MinGW 'make' command is now called 'mingw32-make', this should not
be a problem.</p>

<p>However, if you are suffering unexplained compilation errors then you probably need to
reset your PATH variable within the command prompt that you are compiling from.
You can choose one of two options:</p>

<ul>
  <li><font face="Courier New">SET PATH=D:\MINGW\BIN;%PATH%</font></li>
  <li><font face="Courier New">SET PATH=D:\MINGW\BIN</font></li>
</ul>
<p>Obviously, you can put this command into a little .BAT script if you wish
(for ease of use).</p>

<hr>

<h1>4. Installing DirectX 7.0</h1>

<p>Although RAINE32 uses Allegro (not DirectX directly), Allegro needs DirectX 
7.0 when it is compiled. In other words, whether you intend to compile MAME or
RAINE32 you need DirectX 7.0 installed.</p>

<table border="1" width="100%">
<TBODY>
  <tr>
    <td width="150" bgcolor="#CCFFCC">File</td>
    <td bgcolor="#CCFFCC">Description</td>
  </tr>
  <tr>
    <td bgcolor="#CCFFCC"><a href="http://caesar.logiqx.com/zips/tools/compilers/mingw/dx70_mgw.zip">
    dx70_mgw.zip</a></td>
    <td bgcolor="#CCFFCC">DirectX 7.0 libraries and headers for MinGW</td>
  </tr>
</TBODY>
</table>

<p>To install DirectX  7.0: 

<ol>
  <li>Open<i> dx70_mgw.zip </i>with WinZip and extract into <em>
  D:\MINGW.</em></li>
</ol>

<p>Note: You will be asked if you want to overwrite some existing files
(probably just the 9
files in the 'lib' directory with a '.a' extension). You should answer 'yes' to
any questions asking if you wish to overwrite existing files.</p>

<hr>

<h1>5. Installing NASM</h1>

<p><a href="http://sourceforge.net/projects/nasm/" target="_blank">NASM</a> (Netwide Assembler) is used by
MAME and RAINE32 as an x86 assembler. You require the following archive:</p>

<table border="1" width="100%">
<TBODY>
  <tr>
    <td width="150" bgcolor="#CCFFCC">File</td>
    <td bgcolor="#CCFFCC">Description</td>
  </tr>
  <tr>
    <td bgcolor="#CCFFCC">
    <a href="http://caesar.logiqx.com/zips/tools/assemblers/nasm/nasm-0.98.38-win32.zip">nasm-0.98.38-win32.zip</a></td>
    <td bgcolor="#CCFFCC">NASM 0.98.38 for Win32
      <p>You can get the latest version of NASM from the
      SourceForge link above. Select 'Win32 binaries' from under 'Latest File
      Releases', then download the latest .zip file.</p>
    </td>
  </tr>
</TBODY>
</table>

<p>To install NASM: 

<ol>
  <li>Open <em>nasm-0.98.38-win32.zip</em> using WinZip then extract <em>NASMW.EXE</em> 
    and <i>NDISASMW.EXE</i> into a directory
    that is in your PATH (e.g. <em>C:\WINDOWS\COMMAND</em> or <em>D:\MINGW\BIN</em>).</li>
</ol>

<p>NASM is now installed.</p>

<hr>

<h1>6. Compiling MAME</h1>

<p>The MAME source comes as a ZIP inside a ZIP to gain the greatest compression possible.
To compile MAME, follow these steps: 

<ol>
  <li>Create a directory called <em>D:\MAME</em> and extract the MAME source into it. </li>
  <li>Open a command prompt and change directory to <em>D:\MAME</em> </li>
  <li>Type 'mingw32-make' and press return. </li>
</ol>

<p>Tips:</p>
<ul>
  <li>To compile a Pentium Pro optimized version of MAME, type 'mingw32-make
    I686=1'.</li>
  <li>When compiling a new version of MAME, always run 'mingw32-make clean'
    first (or 'mingw32-make clean I686=1' if you are building a Pentium Pro
    optimised version). Failing to do the 'clean' first might result in a
    disfunctional build!</li>
</ul>

<p>A decent computer will take about 30 minutes to compile MAME but a
low-spec machine could take some time!</p>

<hr>

<h1>7. Compiling MAME Updates</h1>

<p>The MAME updates come as '.diff' files, distributed inside a ZIP.
To compile the MAME update, follow these steps: 

<ol>
  <li>Extract the '.diff' file into <i>D:\MAME</i> (assuming that's where you
    extracted the MAME source). </li>
  <li>Open a command prompt and change directory to <em>D:\MAME</em> </li>
  <li>Type 'patch -p1 &lt;whatever.diff' and press return.<br>
    Use this procedure for all of the updates that you wish to apply.<br>
    Be sure to apply all updates in the correct order and do not miss any out! </li>
  <li>Type 'mingw32-make clean' and press return. </li>
  <li>Type 'mingw32-make' and press return. </li>
</ol>

<p>Tips (as above):</p>
<ul>
  <li>To compile a Pentium Pro optimized version of MAME, type 'mingw32-make
    I686=1'.</li>
  <li>When compiling a new version of MAME, always run 'mingw32-make clean'
    first (or 'mingw32-make clean I686=1' if you are building a Pentium Pro
    optimised version). Failing to do the 'clean' first might result in a
    disfunctional build!</li>
</ul>

</body>
</html>